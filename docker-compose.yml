version: '3.9'

services:
  menu_app:
    container_name: menu_app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.dev
    command: "make migrate_and_run"
    networks:
      - menu_network
    ports:
      - "8000:8000"
    depends_on:
      menu_postgres_db:
        condition: service_healthy
      menu_redis:
        condition: service_healthy
      menu_rabbitmq:
        condition: service_healthy
    volumes:
      - app_data:/var/lib/app/data/

  menu_redis:
    container_name: menu_redis
    image: redis:latest
    expose:
      - 6379
    ports:
      - "6379:6379"
    networks:
      - menu_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 20s
      retries: 100

  menu_postgres_db:
    container_name: menu_postgres_db
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - menu_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 20s
      retries: 100

  menu_rabbitmq:
    image: rabbitmq:latest
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/data/
    networks:
      - menu_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  menu_celery_worker:
    container_name: menu_celery_worker
    build:
      context: .
    command: celery -A celery_worker worker --loglevel=INFO --pool=solo

    depends_on:
      menu_rabbitmq:
        condition: service_healthy
    networks:
      - menu_network
    env_file:
      - ".env.dev"
    restart: always
    volumes:
      - app_data:/var/lib/app/data/

networks:
  menu_network:

volumes:
  postgres_data:
  rabbitmq_data:
  app_data:
